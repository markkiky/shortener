version: "3.3"
services:
  web01:
    build: 
      context: .
      dockerfile: Dockerfile
    image: url_shortner:prod
    ports:
      - ${HOST_PORT}:${HOST_PORT}
    depends_on:
      - sidekiq
      - postgres
      - redis
    env_file:
      - .env
    stdin_open: true
    tty: true
    restart: always

  web02:
    build: 
      context: .
      dockerfile: Dockerfile
    image: url_shortner:prod
    ports:
      - 3001:${HOST_PORT}
    depends_on:
      - sidekiq
      - postgres
      - redis
    env_file:
      - .env
    stdin_open: true
    tty: true
    restart: always

  web03:
    build: 
      context: .
      dockerfile: Dockerfile
    image: url_shortner:prod
    ports:
      - 3002:${HOST_PORT}
    depends_on:
      - sidekiq
      - postgres
      - redis
    env_file:
      - .env
    stdin_open: true
    tty: true
    restart: always

  sidekiq:
    build: 
      context: .
      dockerfile: Dockerfile
    image: url_shortner:prod
    command: bundle exec sidekiq
    depends_on:
      - postgres
      - redis
    env_file:
      - .env

  haproxy:
    image: haproxy:latest
    depends_on:
      - web01
      - web02
      - web03
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - "80:80"

  postgres:
    image: postgres:16.1-alpine
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - ${DB_PORT}

  redis:
    image: "redis:7.2.4-alpine"
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - "redis:/data"
    ports:
      - ${REDIS_PORT}

volumes:
  redis:
  postgres:
